{"version":3,"sources":["../../../dev/client/modules/render.jsx"],"names":["global","data","comp","button","mainRoot","root","main","obj","individualPlaylist","id","getPlaylist","render","mainPagePlaylists","getUserData","user","getPlaylistList","list","containers","i","push"],"mappings":"AAAA,OAASA,MAAT,KAAuB,aAAvB,CACA,OAASC,IAAT,KAAqB,WAArB,CACA,OAASC,IAAT,KAAqB,gBAArB,CACA,OAASC,MAAT,KAAuB,aAAvB,CAEA,KAAMC,CAAAA,QAAQ,CAAGJ,MAAM,CAACK,IAAP,CAAY,cAAZ,CAAjB,CAEA;AACA;AACA;AACA;AACA,GAEA,KAAMC,CAAAA,IAAI,CAAG,IAAM,CACf,KAAMC,CAAAA,GAAG,CAAG,CACRC,kBAAkB,CAAGC,EAAD,EAAQ,CACxBR,IAAI,CAACS,WAAL,CAAiBD,EAAjB,CAAsBR,IAAD,EAAU,CAC3BG,QAAQ,CAACO,MAAT,cAAgB,oBAAC,IAAD,CAAM,kBAAN,EAAyB,IAAI,CAAEV,IAA/B,EAAhB,CACH,CAFD,CAGH,CALO,CAMRW,iBAAiB,CAAE,IAAM,CACrBX,IAAI,CAACY,WAAL,CAAkBC,IAAD,EAAU,CACvBb,IAAI,CAACc,eAAL,CAAsBC,IAAD,EAAU,CAC3B,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CACA,IAAK,GAAIC,CAAAA,CAAT,GAAcF,CAAAA,IAAd,CAAoB,CAChBf,IAAI,CAACS,WAAL,CAAiBQ,CAAjB,CAAqBjB,IAAD,EAAU,CAC1BgB,UAAU,CAACE,IAAX,cACI,oBAAC,IAAD,CAAM,iBAAN,EAAwB,GAAG,CAAED,CAA7B,CAAgC,EAAE,CAAEA,CAApC,CAAuC,IAAI,CAAEjB,IAA7C,EADJ,CAGH,CAJD,CAKH,CACDG,QAAQ,CAACO,MAAT,cAAgB,oBAAC,IAAD,CAAM,QAAN,EAAe,MAAM,CAAEG,IAAvB,CAA6B,SAAS,CAClDG,UADY,EAAhB,CAGH,CAZD,CAaH,CAdD,CAeH,CAtBO,CAAZ,CAwBA,MAAOV,CAAAA,GACV,CA1BD,CA2BA,MAAO,MAAMI,CAAAA,MAAM,CAAGL,IAAI,EAAnB","sourcesContent":["import { global } from './global.js'\nimport { data } from './data.js'\nimport { comp } from './component.js'\nimport { button } from './button.js'\n\nconst mainRoot = global.root('article#main');\n\n/**\n * @param {Function} individualPlaylist - PÃ¡gina da Playlist individual\n *\n *\n**/\n\nconst main = () => {\n    const obj = {\n        individualPlaylist: (id) => {\n            data.getPlaylist(id, (data) => {\n                mainRoot.render(<comp.IndividualPlaylist data={data} />);\n            });\n        },\n        mainPagePlaylists: () => {\n            data.getUserData((user) => {\n                data.getPlaylistList((list) => {\n                    var containers = []\n                    for (let i of list) {\n                        data.getPlaylist(i, (data) => {\n                            containers.push(\n                                <comp.PlaylistContainer key={i} id={i} data={data} />\n                            );\n                        })\n                    }\n                    mainRoot.render(<comp.MainPage bgData={user} component={\n                        containers\n                    } />)\n                });\n            });\n        }\n    }\n    return obj;\n}\nexport const render = main();"],"file":"render.js"}